<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>org.appverse.web.showcases.gwt.rest</groupId>
		<artifactId>appverse-web-showcases-gwt-rest</artifactId>
		<version>1.4-MILESTONE_1</version>
	</parent>

	<groupId>org.appverse.web.showcases.gwt.rest</groupId>
	<artifactId>backend</artifactId>
	<packaging>war</packaging>
	<name>GWT Showcase GWT Backend Module Rest</name>

	<licenses>
        <license>
            <name>Mozilla Public License Version 2.0</name>
            <url>http://appverse.org/legal/appverse-license/</url>
            <distribution>repo</distribution>
            <comments>
                Copyright (c) 2012 GFT Appverse, S.L., Sociedad Unipersonal.

                This Source Code Form is subject to the terms of the Mozilla Public
                License, v. 2.0. If a copy of the MPL was not distributed with this
                file, You can obtain one at http://mozilla.org/MPL/2.0/.

                Redistribution and use in source and binary forms, with or without modification,
                are permitted provided that the conditions of the Mozilla Public License v2.0
                are met.

                THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
                ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
                WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
                DISCLAIMED. EXCEPT IN CASE OF WILLFUL MISCONDUCT OR GROSS NEGLIGENCE, IN NO EVENT
                SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
                INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
                LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
                PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
                WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT(INCLUDING NEGLIGENCE OR OTHERWISE)
                ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
                POSSIBILITY OF SUCH DAMAGE.
            </comments>
        </license>
	</licenses>

    <properties>
        <webappDirectory>${project.build.directory}/${project.build.finalName}</webappDirectory>
    </properties>

	<build>
        <outputDirectory>${webappDirectory}/WEB-INF/classes</outputDirectory>

		<filters>
			<filter>src/main/filters/${env}.properties</filter>
		</filters>

		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
			</resource>
		</resources>

		<plugins>
			<plugin>
				<groupId>org.appverse.web.tools.jpaddlgenerator</groupId>
				<artifactId>appverse-web-tools-jpa-ddl-generator</artifactId>
                <executions>
                    <execution>
                        <!-- TODO: The appverse plugin should have this as the default.
                             Without this the plugin would not be executed with gwt:run.
                             TODO: For some reason in the first time the application is started it is not able to
                             access the tables generated by these scripts. -->
                        <phase>process-resources</phase>
                    </execution>
                </executions>
			</plugin>

            <!-- maven-assembly-plugin and maven-dependency-plugin were removed because now GWT compilation happens
                 in the backend module where the war is built, so there is no need to create a zip in another
                 module to be unpacked in the war. -->

            <plugin>
                <groupId>org.apache.tomcat.maven</groupId>
                <artifactId>tomcat7-maven-plugin</artifactId>
                <version>2.2</version>
                <configuration>
                    <path>/</path>
                    <port>8081</port>
                    <httpsPort>8443</httpsPort>
                    <!-- can't use the target directory (as warSourceDirectory) because this plugin will not copy the
                         webapp directory there. -->
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>gwt-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <goals>
                            <goal>compile</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <runTarget>index.html</runTarget>
                    <copyWebapp>true</copyWebapp>
                    <debugSuspend>false</debugSuspend>
                    <style>DETAILED</style>
                    <modules>
                        <!-- This is the only module that defines an entry point, so it is better to declare it
                             here otherwise GWT will try to find all modules. -->
                        <module>org.appverse.web.showcases.gwtshowcase.gwtfrontend.Admin</module>
                    </modules>
                </configuration>
            </plugin>

		</plugins>
	</build>

	<dependencies>
        <dependency>
            <groupId>org.glassfish.jersey.media</groupId>
            <artifactId>jersey-media-json-jackson</artifactId>
        </dependency>
        <dependency>
			<groupId>org.appverse.web.framework.modules.backend.core.persistence.eclipselink</groupId>
			<artifactId>appverse-web-modules-backend-core-persistence-eclipselink</artifactId>
		</dependency>

		<dependency>
			<groupId>org.appverse.web.framework.modules.backend.frontfacade.rest</groupId>
			<artifactId>appverse-web-modules-backend-frontfacade-rest</artifactId>
		</dependency>
		<dependency>
			<groupId>org.appverse.web.framework.modules.backend.frontfacade.gwt</groupId>
			<artifactId>appverse-web-modules-backend-frontfacade-gwt</artifactId>
		</dependency>

		<dependency>
			<groupId>org.appverse.web.showcases.gwt.rest</groupId>
			<artifactId>gwtshared</artifactId>
			<version>${project.version}</version>
		</dependency>

        <dependency>
            <groupId>org.appverse.web.showcases.gwt.rest</groupId>
            <artifactId>gwtfrontend</artifactId>
            <version>${project.version}</version>
            <scope>provided</scope>
        </dependency>

        <!-- maven-assembly-plugin and maven-dependency-plugin were removed because now GWT compilation happens
             in the backend module where the war is built, so there is no need to create a zip in another
             module to be unpacked in the war. -->

		<dependency>
			<groupId>org.hsqldb</groupId>
			<artifactId>hsqldb</artifactId>
			<scope>runtime</scope>
		</dependency>
	</dependencies>
    <profiles>
        <profile>
            <id>development</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <properties>
                <env>development</env>
                <maven.skip.tests>true</maven.skip.tests>
            </properties>
            <build>
                <plugins>
                    <!-- Let GWT see source files in other modules, so we don't need to rebuild them to execute
                         in devmode. See the documentation on these pages:

                            http://mojo.codehaus.org/gwt-maven-plugin/user-guide/multiproject.html
                            http://mojo.codehaus.org/gwt-maven-plugin/user-guide/productivity.html
                            http://jira.codehaus.org/browse/MGWT-380

                         Ideally, if there is no strong reason to have separate modules than it is better to have all
                         GWT compiled code in the same Maven module so there is no need to do this kind of trick.
                          -->
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>build-helper-maven-plugin</artifactId>
                        <version>1.8</version>
                        <executions>
                            <execution>
                                <id>add-other-modules-source</id>
                                <!-- We need a phase after the compilation, so those directories will not be built here
                                     (we just want to add them to the classpath so GWT can see them).
                                     We could rely on the fact that the source files are already in the jars generated
                                     by those modules, but then it would be necessary to rebuild those jars and restart
                                     devmode for it to see any changes.
                                     -->
                                <phase>process-classes</phase>
                                <goals>
                                    <goal>add-source</goal>
                                </goals>
                                <configuration>
                                    <sources>
                                        <source>../gwtfrontend/src/main/java</source>
                                        <source>../gwtshared/src/main/java</source>
                                        <!-- Not using add-resource because this goal would not add the entries to the
                                             classpath that is what devmode needs. -->
                                        <source>../gwtfrontend/src/main/resources</source>
                                        <source>../gwtshared/src/main/resources</source>
                                    </sources>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
